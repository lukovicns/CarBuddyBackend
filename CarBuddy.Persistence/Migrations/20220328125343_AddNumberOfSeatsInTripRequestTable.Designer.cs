// <auto-generated />
using System;
using CarBuddy.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace CarBuddy.Persistence.Migrations
{
    [DbContext(typeof(CarBuddyContext))]
    [Migration("20220328125343_AddNumberOfSeatsInTripRequestTable")]
    partial class AddNumberOfSeatsInTripRequestTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("CarBuddy.Domain.Models.Car", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Brand")
                        .HasColumnType("text")
                        .HasColumnName("brand");

                    b.Property<Guid>("DriverId")
                        .HasColumnType("uuid")
                        .HasColumnName("driverId");

                    b.Property<string>("Model")
                        .HasColumnType("text")
                        .HasColumnName("model");

                    b.Property<int>("NumberOfSeats")
                        .HasColumnType("integer")
                        .HasColumnName("numberOfSeats");

                    b.Property<string>("Photo")
                        .HasColumnType("text")
                        .HasColumnName("photo");

                    b.Property<int>("Year")
                        .HasColumnType("integer")
                        .HasColumnName("year");

                    b.HasKey("Id");

                    b.HasIndex("DriverId")
                        .IsUnique();

                    b.ToTable("car");
                });

            modelBuilder.Entity("CarBuddy.Domain.Models.ChatMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uuid")
                        .HasColumnName("authorId");

                    b.Property<Guid>("ConversationId")
                        .HasColumnType("uuid")
                        .HasColumnName("conversationId");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("date");

                    b.Property<string>("Message")
                        .HasColumnType("text")
                        .HasColumnName("message");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("ConversationId");

                    b.ToTable("message");
                });

            modelBuilder.Entity("CarBuddy.Domain.Models.Conversation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("FirstParticipantId")
                        .HasColumnType("uuid")
                        .HasColumnName("firstParticipantId");

                    b.Property<int>("FirstParticipantReadStatus")
                        .HasColumnType("integer")
                        .HasColumnName("firstParticipantReadStatus");

                    b.Property<Guid>("SecondParticipantId")
                        .HasColumnType("uuid")
                        .HasColumnName("secondParticipantId");

                    b.Property<int>("SecondParticipantReadStatus")
                        .HasColumnType("integer")
                        .HasColumnName("secondParticipantReadStatus");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("startDate");

                    b.HasKey("Id");

                    b.HasIndex("FirstParticipantId");

                    b.HasIndex("SecondParticipantId");

                    b.ToTable("conversation");
                });

            modelBuilder.Entity("CarBuddy.Domain.Models.Rating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uuid")
                        .HasColumnName("authorId");

                    b.Property<double>("Evaluation")
                        .HasColumnType("double precision")
                        .HasColumnName("evaluation");

                    b.Property<Guid>("RecipientId")
                        .HasColumnType("uuid")
                        .HasColumnName("recipientId");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("RecipientId");

                    b.ToTable("rating");
                });

            modelBuilder.Entity("CarBuddy.Domain.Models.RatingComment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<Guid>("RatingId")
                        .HasColumnType("uuid")
                        .HasColumnName("ratingId");

                    b.HasKey("Id");

                    b.HasIndex("RatingId");

                    b.ToTable("ratingComment");
                });

            modelBuilder.Entity("CarBuddy.Domain.Models.Trip", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<TimeSpan>("ArriveTime")
                        .HasColumnType("interval")
                        .HasColumnName("arriveTime");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("date");

                    b.Property<Guid>("DriverId")
                        .HasColumnType("uuid")
                        .HasColumnName("driverId");

                    b.Property<string>("FromCity")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("fromCity");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("isDeleted");

                    b.Property<int>("NumberOfPassengers")
                        .HasColumnType("integer")
                        .HasColumnName("numberOfPassengers");

                    b.Property<double>("Price")
                        .HasColumnType("double precision")
                        .HasColumnName("price");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("interval")
                        .HasColumnName("startTime");

                    b.Property<string>("ToCity")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("toCity");

                    b.HasKey("Id");

                    b.HasIndex("DriverId");

                    b.ToTable("trip");
                });

            modelBuilder.Entity("CarBuddy.Domain.Models.TripRequest", b =>
                {
                    b.Property<Guid>("TripId")
                        .HasColumnType("uuid")
                        .HasColumnName("tripId");

                    b.Property<Guid>("PassengerId")
                        .HasColumnType("uuid")
                        .HasColumnName("passengerId");

                    b.Property<int>("NumberOfSeats")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.HasKey("TripId", "PassengerId");

                    b.HasIndex("PassengerId");

                    b.ToTable("tripRequest");
                });

            modelBuilder.Entity("CarBuddy.Domain.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("ActivationToken")
                        .HasColumnType("text")
                        .HasColumnName("activationToken");

                    b.Property<int>("Age")
                        .HasColumnType("integer")
                        .HasColumnName("age");

                    b.Property<Guid?>("CarId")
                        .HasColumnType("uuid")
                        .HasColumnName("carId");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("createdAt");

                    b.Property<string>("Email")
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .HasColumnType("text")
                        .HasColumnName("firstName");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("boolean")
                        .HasColumnName("isActivated");

                    b.Property<string>("LastName")
                        .HasColumnType("text")
                        .HasColumnName("lastName");

                    b.Property<string>("Password")
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.Property<string>("Photo")
                        .HasColumnType("text")
                        .HasColumnName("photo");

                    b.HasKey("Id");

                    b.ToTable("user");
                });

            modelBuilder.Entity("CarBuddy.Domain.Models.UserTrip", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("userId");

                    b.Property<Guid>("TripId")
                        .HasColumnType("uuid")
                        .HasColumnName("tripId");

                    b.HasKey("UserId", "TripId");

                    b.HasIndex("TripId");

                    b.ToTable("userTrip");
                });

            modelBuilder.Entity("CarBuddy.Domain.Models.Car", b =>
                {
                    b.HasOne("CarBuddy.Domain.Models.User", "Driver")
                        .WithOne("Car")
                        .HasForeignKey("CarBuddy.Domain.Models.Car", "DriverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Driver");
                });

            modelBuilder.Entity("CarBuddy.Domain.Models.ChatMessage", b =>
                {
                    b.HasOne("CarBuddy.Domain.Models.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarBuddy.Domain.Models.Conversation", "Conversation")
                        .WithMany("ChatMessages")
                        .HasForeignKey("ConversationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Conversation");
                });

            modelBuilder.Entity("CarBuddy.Domain.Models.Conversation", b =>
                {
                    b.HasOne("CarBuddy.Domain.Models.User", "FirstParticipant")
                        .WithMany("FirstParticipantConversations")
                        .HasForeignKey("FirstParticipantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarBuddy.Domain.Models.User", "SecondParticipant")
                        .WithMany("SecondParticipantConversations")
                        .HasForeignKey("SecondParticipantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FirstParticipant");

                    b.Navigation("SecondParticipant");
                });

            modelBuilder.Entity("CarBuddy.Domain.Models.Rating", b =>
                {
                    b.HasOne("CarBuddy.Domain.Models.User", "Author")
                        .WithMany("AuthorRatings")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarBuddy.Domain.Models.User", "Recipient")
                        .WithMany("RecipientRatings")
                        .HasForeignKey("RecipientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Recipient");
                });

            modelBuilder.Entity("CarBuddy.Domain.Models.RatingComment", b =>
                {
                    b.HasOne("CarBuddy.Domain.Models.Rating", "Rating")
                        .WithMany()
                        .HasForeignKey("RatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rating");
                });

            modelBuilder.Entity("CarBuddy.Domain.Models.Trip", b =>
                {
                    b.HasOne("CarBuddy.Domain.Models.User", "Driver")
                        .WithMany()
                        .HasForeignKey("DriverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Driver");
                });

            modelBuilder.Entity("CarBuddy.Domain.Models.TripRequest", b =>
                {
                    b.HasOne("CarBuddy.Domain.Models.User", "Passenger")
                        .WithMany("TripRequests")
                        .HasForeignKey("PassengerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarBuddy.Domain.Models.Trip", "Trip")
                        .WithMany("TripRequests")
                        .HasForeignKey("TripId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Passenger");

                    b.Navigation("Trip");
                });

            modelBuilder.Entity("CarBuddy.Domain.Models.UserTrip", b =>
                {
                    b.HasOne("CarBuddy.Domain.Models.Trip", "Trip")
                        .WithMany("UserTrips")
                        .HasForeignKey("TripId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarBuddy.Domain.Models.User", "User")
                        .WithMany("UserTrips")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trip");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CarBuddy.Domain.Models.Conversation", b =>
                {
                    b.Navigation("ChatMessages");
                });

            modelBuilder.Entity("CarBuddy.Domain.Models.Trip", b =>
                {
                    b.Navigation("TripRequests");

                    b.Navigation("UserTrips");
                });

            modelBuilder.Entity("CarBuddy.Domain.Models.User", b =>
                {
                    b.Navigation("AuthorRatings");

                    b.Navigation("Car");

                    b.Navigation("FirstParticipantConversations");

                    b.Navigation("RecipientRatings");

                    b.Navigation("SecondParticipantConversations");

                    b.Navigation("TripRequests");

                    b.Navigation("UserTrips");
                });
#pragma warning restore 612, 618
        }
    }
}
